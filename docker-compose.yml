version: "3.8"

services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_DATABASE: pet_control
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend
    container_name: backend
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    env_file:
      - ./backend/.env
    depends_on:
      mysql:
        condition: service_healthy
    expose:
      - "9000"
    command: >
      bash -lc "
        composer install --no-interaction &&
        php -r 'file_exists(\".env\") || copy(\".env.example\", \".env\");' &&
        php artisan key:generate --force &&
        chown -R www-data:www-data storage bootstrap/cache &&
        chmod -R ug+rwX storage bootstrap/cache &&
        php-fpm
      "

  frontend:
    image: node:18
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    #environment:
    #- NEXT_PUBLIC_API_BASE=http://localhost/api
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    environment:
      ADMINER_DESIGN: "nette"
    ports:
      - "8080:8080"
    depends_on:
      - mysql

volumes:
  mysql_data:
